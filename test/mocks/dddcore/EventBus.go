// Code generated by mockery v2.32.0. DO NOT EDIT.

package mocks

import (
	dddcore "cypt/internal/dddcore"

	mock "github.com/stretchr/testify/mock"
)

// EventBus is an autogenerated mock type for the EventBus type
type EventBus struct {
	mock.Mock
}

// Post provides a mock function with given fields: ev
func (_m *EventBus) Post(ev dddcore.Event) {
	_m.Called(ev)
}

// PostAll provides a mock function with given fields: ar
func (_m *EventBus) PostAll(ar dddcore.AggregateRoot) {
	_m.Called(ar)
}

// Register provides a mock function with given fields: h
func (_m *EventBus) Register(h dddcore.EventHandler) {
	_m.Called(h)
}

// Unregister provides a mock function with given fields: h
func (_m *EventBus) Unregister(h dddcore.EventHandler) {
	_m.Called(h)
}

// NewEventBus creates a new instance of EventBus. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEventBus(t interface {
	mock.TestingT
	Cleanup(func())
}) *EventBus {
	mock := &EventBus{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
